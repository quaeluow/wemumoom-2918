# DESCRIPTION
# WeBWorK problem written by Stefan Lukits 
# <slukits(at)bcit(dot)ca>
# DBsubject(Linear algebra)
# DBchapter(Inner products)
# DBsection(Projection and distance)
# Date(2018/11/07)
# Institution(British Columbia Institute of Technology)
# Author(Stefan Lukits)

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "RserveClient.pl",
  "MathObjects.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

### Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

### Call R server
rserve_eval("set.seed($seed)"); 

@n=(
"John",
"Jerome",
"Francis",
"Adeline",
"Richard",
"Leonard",
"Raymond",
"Allyson",
"Rebecca",
"Charles",
"Mariana",
"Patricia",
"Robert",
"Donald",
"Steven",
"Eden",
"Norman",
"Catherine",
"Clara",
"Kara",
"Jean",
"Linda",
"David",
"Ernest",
"Charles",
"Doris",
"Arthur",
"Sheila",
"Kimberly",
"Carol",
"Chad",
"Lena",
"Aaron",
"Barbara",
"Christina",
"Elizabeth",
"Vincent",
"Kenneth",
"Anna",
"Andre",
"Keith",
"Thomas",
"Roger",
"Zane",
"April",
"Lauren",
"Jan",
"Stephen",
"Arron",
"Robert"
);

$m1=random(0,49,1);
do { $m2=random(0,49,1); } until ($m2!=$m1);
do { $m3=random(0,49,1); } until (($m3!=$m1) && ($m3!=$m2));
do { $m4=random(0,49,1); } until (($m4!=$m1) && ($m4!=$m2) && ($m4!=$m3));
$name1=$n[$m1];
$name2=$n[$m2];
$name3=$n[$m3];
$name4=$n[$m4];

@e=rserve_eval("
rnorm(1,0,1);
");
@d=rserve_eval("
runif(2,10,80);
");
$d[2]=180-$d[0]-$d[1]+$e[0];

$ad[0]=int($d[0]);
$am[0]=int(($d[0]-int($d[0]))*60);
$as[0]=int(((($d[0]-int($d[0]))*60)-int(($d[0]-int($d[0]))*60))*60);
$m[0]=$ad[0]+($am[0]/60)+($as[0]/3600);
$ad[1]=int($d[1]);
$am[1]=int(($d[1]-int($d[1]))*60);
$as[1]=int(((($d[1]-int($d[1]))*60)-int(($d[1]-int($d[1]))*60))*60);
$m[1]=$ad[1]+($am[1]/60)+($as[1]/3600);
$ad[2]=int($d[2]);
$am[2]=int(($d[2]-int($d[2]))*60);
$as[2]=int(((($d[2]-int($d[2]))*60)-int(($d[2]-int($d[2]))*60))*60);
$m[2]=$ad[2]+($am[2]/60)+($as[2]/3600);

Context("Matrix");
$A=Matrix([[1,0,0],[0,1,0],[0,0,1],[1,1,0],[1,1,1],[0,1,1]]);
$At=$A->transpose;
$Yt=Matrix([[$m[0],$m[1],$m[2],$m[3],$m[4],$m[5]]]);
$Y=$Yt->transpose;
$AtA=$At*$A;
$AtAi=$AtA->inverse;
$V=$AtAi*$At*$Y;
$ab=$V->element(1,1);
$bc=$V->element(2,1);
$cd=$V->element(3,1);
$ad=$ab+$bc+$cd;

BEGIN_TEXT

$PAR
Answer: \{ans_rule(12)\}.

END_TEXT

ANS(num_cmp($ad,
  tolType => 'absolute',
    tolerance => .001,
    ));

ENDDOCUMENT();        # This should be the last executable line in the problem.
